import datetime

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
import calendar
from datetime import date

input_date_photo = "AgACAgIAAxkBAAINJ2grgnqe3UTaYZaurvGeXavEQLEbAAKl6jEbiftgSQ38ymU6m4XvAQADAgADcwADNgQ"

input_date_text = str(
    f"–≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ª—é–±—É—é —Å–≤–æ–±–æ–¥–Ω—É—é –¥–∞—Ç—É –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ\n"
    f"üîê ‚Äî –¥–∞—Ç—ã —Å –∑–∞–º–æ—á–∫–æ–º —É–∂–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω—ã –¥—Ä—É–≥–∏–º–∏ –≥–æ—Å—Ç—è–º–∏\n"
    f"\n"
    f"c—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è:\n"
    f"—Å –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ –ø–æ —á–µ—Ç–≤–µ—Ä–≥ ‚Äî 240 byn\n"
    f"—Å –ø—è—Ç–Ω–∏—Ü—ã –ø–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ ‚Äî 290 byn\n"
    f"–æ—Ç –¥–≤—É—Ö –¥–Ω–µ–π –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è ‚Äî —Å–∫–∏–¥–∫–∞ 20% –Ω–∞ –≤–µ—Å—å —á–µ–∫\n"
    f"\n"
    f"–ø—Ä–∞–≤–∏–ª–∞ –∑–∞—Å–µ–ª–µ–Ω–∏—è:\n"
    f"–∑–∞–µ–∑–¥ ‚Äî —Å 15:00\n"
    f"–≤—ã–µ–∑–¥ ‚Äî –¥–æ 11:00 —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è\n"
)

def input_date_keyboard(booked_dates: set[date],
                        check_in: date = None,
                        check_out: date = None,
                        year: int = datetime.date.today().year,
                        month: int = datetime.date.today().month) -> InlineKeyboardMarkup:
    """
    –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è:
     - üîí –µ—Å–ª–∏ –¥–µ–Ω—å –≤ booked_dates
     - üìç –µ—Å–ª–∏ –ø–æ–ø–∞–ª –≤ [check_in..check_out]
     - –∏–Ω–∞—á–µ ‚Äî —á–∏—Å–ª–æ
    """
    builder = InlineKeyboardBuilder()
    mn = date(year, month, 1).strftime("%B %Y")
    prev_m = month - 1 or 12
    prev_y = year - (1 if month == 1 else 0)
    next_m = month + 1 if month < 12 else 1
    next_y = year + (1 if month == 12 else 0)

    # –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏
    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"switch|{prev_y}|{prev_m}"),
        InlineKeyboardButton(text=mn, callback_data="noop"),
        InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"switch|{next_y}|{next_m}")
    )

    cal = calendar.Calendar(firstweekday=0)
    for week in cal.monthdayscalendar(year, month):
        row = []
        for day in week:
            if day == 0:
                row.append(InlineKeyboardButton(text=" ", callback_data="noop"))
                continue

            d_ = date(year, month, day)
            if d_ in booked_dates:
                text, cb = "üîí", "noop"
            else:
                # –µ—Å–ª–∏ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ
                if check_in and check_out and check_in <= d_ <= check_out:
                    text = "üìç"
                elif check_in and check_in == d_ and check_out is None:
                    text = "üìç"
                else:
                    text = str(day)
                cb = f"select|{year}|{month}|{day}"

            row.append(InlineKeyboardButton(text=text, callback_data=cb))
        builder.row(*row)

    # –∫–Ω–æ–ø–∫–∏ —Å–Ω–∏–∑—É
    builder.row(
        InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="delete_message"),
        InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_date")
    )

    return builder.as_markup()


def input_date_alerts(check_in=None, check_out=None):
    if check_in and check_out:
        return  {
          "text": f"–î–∞—Ç—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å {check_in} –ø–æ {check_out}",
        }
    elif not check_in and not check_out:
        return {
            "text": f"–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—ã",
        }
    else:
        return  {
          "text": f"–î–∞—Ç–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {check_in}",
        }