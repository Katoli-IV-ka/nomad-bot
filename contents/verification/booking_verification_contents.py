from datetime import timedelta

from aiogram.types import InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

booking_confirmation_photo = "AgACAgIAAxkBAAIBwWfrCtuqOQr0YVZFQF3gIa3Fs9IBAAKq9TEb4TZZS2amRIVvjqXmAQADAgADbQADNgQ"

def booking_confirmation_text(check_in, check_out, package: dict,
                         contact_name: str, phone_number: str, username: str | None,
                         total: int) -> str:
    # üóìÔ∏è –î–∞—Ç—ã
    check_in_text = check_in.strftime("%d.%m.%Y")
    if check_in == check_out:
        check_out = check_out + timedelta(days=1)
    check_out_text = check_out.strftime("%d.%m.%Y")

    # üõçÔ∏è –£—Å–ª—É–≥–∏
    days = (check_out - check_in).days
    base = "–¥–ª—è –æ–¥–Ω–æ–≥–æ" if package.get("one_person") else "–¥–ª—è –¥–≤–æ–∏—Ö"
    kupel = " + –∫—É–ø–µ–ª—å" if package.get("koupel") else ""
    child = "—Å –¥–µ—Ç—å–º–∏" if package.get("child") else "–±–µ–∑ –¥–µ—Ç–µ–π"
    pet = "—Å –ø–∏—Ç–æ–º—Ü–µ–º" if package.get("pet") else "–±–µ–∑ –ø–∏—Ç–æ–º—Ü–µ–≤"

    # üë§ –ö–æ–Ω—Ç–∞–∫—Ç
    user = f"\n@{username}" if username else ""

    return (
        f"üìÜ *–í—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–∞—Ç—ã:*\n"
        f"–ó–∞—Å–µ–ª–µ–Ω–∏–µ: {check_in_text}\n"
        f"–í—ã—Å–µ–ª–µ–Ω–∏–µ:  {check_out_text}\n\n"

        f"üõç *–ü–∞–∫–µ—Ç —É—Å–ª—É–≥:*\n"
        f"{days} {'–¥–µ–Ω—å' if days == 1 else '–¥–Ω—è' if days < 5 else '–¥–Ω–µ–π'} {base}{kupel} \n"
        f"{child}\n"
        f"{pet}\n\n"

        f"üë§ *–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:*\n"
        f"{contact_name}\n{phone_number}{user}\n\n"

        f"üí≥ *–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ:* {total}—Ä."
    )


def booking_confirmation_keyboard(notion_page_id) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardBuilder()

    keyboard.button(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"wait_payment_{notion_page_id}")
    keyboard.button(text="–û—Ç–∫–∞–∑–∞—Ç—å", callback_data=f"reject_booking_{notion_page_id}")

    return keyboard.as_markup(one_time_keyboard=True)

